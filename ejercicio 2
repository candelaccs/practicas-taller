2. El administrador de un edificio de oficinas cuenta, en papel, con la información del pago de
las expensas de dichas oficinas.
Implementar un programa que invoque a módulos para cada uno de los siguientes puntos:
a. Genere un vector, sin orden, con a lo sumo las 300 oficinas que administra. De cada oficina
se ingresa el código de identificación, DNI del propietario y valor de la expensa. La lectura
finaliza cuando se ingresa el código de identificación -1, el cual no se procesa.
b. Ordene el vector, aplicando el método de inserción, por código de identificación de la
oficina.
c. Ordene el vector aplicando el método de selección, por código de identificación de la oficina.

program ejercicio2;
const
 maxoficinas = 300;
type
 roficinas = 1..maxoficinas;
 
 oficina = record
  codigo: integer;
  dni: integer;
  valor: real,
 end;
 
 voficinas = array [roficinas] of oficina;
 
 procedure leer (var ofi: oficina);
 begin
  writeln ('ingresar codigo'); readln (ofi.codigo);
  if (ofi.codigo <> -1) thern begin
   writeln ('ingresar DNI'); readln (ofi.dni);
   writeln ('ingresar valor'); readln (ofi.valor);
  end;
end;

procedure cargarVector (var v:voficinas; var diml: roficinas);
var
 ofi:oficina;
begin
 diml:= 0;
 leer (ofi);
 while (ofi.codigo <> -1) do begin
  diml:= diml+1;
  v[diml]:= ofi;
  leer (ofi);
 end;
end;
  
procedure ordInsercion (var v:voficinas; diml: roficinas);
var
 i, j: roficinas;
 actual: oficina;
begin
 for i:= 2 to diml do begin
  actual:= v[i];
  j:= j-1;
  while (j > 0) and (v[j]. codigo > actual.codigo) do begin
   v[j+1]:= v[j];
   j:= j-1;
  end;
  v[j+1]:= actual;
 end;
end;

procedure ordSeleccion (var v:voficinas; diml: roficinas);
var
 i,j,p: roficinas;
 item: oficina;
begin
 for i:= 1 to diml-1 do begin
  p:= i;
  for j:= i+1 to diml do
   if v[j].codigo < v[p].codigo then
    p:= j;
  item:= v[p];
  v[p]:= v[i];
  v[i]:= item;
 end;
end;

var
 v: voficinas;
 diml: roficinas;
begin

 cargarVector (v,diml);
 ordInsercion (v,diml);
 ordSeleccion (v,diml); // ya en este punto no tiene sentido ordenarlo //
 
end.
